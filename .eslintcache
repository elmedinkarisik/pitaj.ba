[{"/home/elmedin/pitaj.ba/src/index.js":"1","/home/elmedin/pitaj.ba/src/app.js":"2","/home/elmedin/pitaj.ba/src/lib/firebase.js":"3","/home/elmedin/pitaj.ba/src/components/question.js":"4","/home/elmedin/pitaj.ba/src/components/navbar.js":"5","/home/elmedin/pitaj.ba/src/components/post-new-question.js":"6","/home/elmedin/pitaj.ba/src/components/vote-buttons.js":"7"},{"size":291,"mtime":1611705352558,"results":"8","hashOfConfig":"9"},{"size":987,"mtime":1612631513350,"results":"10","hashOfConfig":"9"},{"size":607,"mtime":1610673431372,"results":"11","hashOfConfig":"9"},{"size":469,"mtime":1611677241217,"results":"12","hashOfConfig":"9"},{"size":534,"mtime":1611671935543,"results":"13","hashOfConfig":"9"},{"size":2553,"mtime":1612631214761,"results":"14","hashOfConfig":"9"},{"size":3115,"mtime":1612632611222,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1dsntvx",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/elmedin/pitaj.ba/src/index.js",[],["33","34"],"/home/elmedin/pitaj.ba/src/app.js",["35","36"],"import { Container, Flex, Spinner, VStack } from \"@chakra-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport Question from \"./components/question\";\nimport db from \"./lib/firebase\";\nimport Navbar from \"./components/navbar\";\n\nconst App = () => {\n  const [questions, setQuestions] = useState([]);\n\n  useEffect(() => {\n    db.collection(\"questions\")\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((querySnapshot) => {\n        const _questions = [];\n\n        querySnapshot.forEach((doc) => {\n          _questions.push({\n            id: doc.id,\n            ...doc.data(),\n          });\n        });\n\n        setQuestions(_questions);\n      });\n  }, []);\n\n  return (\n    <>\n      <Navbar />\n      <Container maxW=\"md\" centerContent p={8}>\n        <VStack spacing={8} w=\"100%\">\n          {questions.map((question) => (\n            <Question question={question} key={question.id} />\n          ))}\n        </VStack>\n      </Container>\n    </>  \n  );\n};\n\nexport default App;","/home/elmedin/pitaj.ba/src/lib/firebase.js",[],"/home/elmedin/pitaj.ba/src/components/question.js",[],"/home/elmedin/pitaj.ba/src/components/navbar.js",[],"/home/elmedin/pitaj.ba/src/components/post-new-question.js",["37","38"],"import {\n    Button,\n    FormControl,\n    FormLabel,\n    Textarea,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n    HStack,\n    useDisclosure,\n} from \"@chakra-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport db from \"../lib/firebase\";\n\nconst PostNewQuestion = () => {\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    const [title, setTitle] = useState(\"\");\n    const [isSaving, setSaving] = useState(false);\n\n    const handleSubmit = async () => {\n        const date = new Date();\n\n        await db.collection(\"questions\").add({\n            title,\n            upVotesCount: 0,\n            downVotesCount: 0,\n            createdAt: date.toUTCString(),\n            updatedAt: date.toUTCString()\n        });\n\n        onClose();\n        setTitle(\"\");\n    };\n\n    return (\n        <>\n            <Button onClick = {onOpen} colorScheme = \"blue\">\n                Postavi pitanje\n            </Button>\n\n            <Modal onClose = {onClose} isOpen = {isOpen} isCentered>\n                <ModalOverlay>\n                    <ModalContent>\n                        <ModalHeader>Postavi pitanje</ModalHeader>\n                        <ModalCloseButton />\n                        <ModalBody>\n                            <FormControl id = \"question-title\">\n                                <FormLabel>Naslov pitanja</FormLabel>\n                                <Textarea\n                                    type = \"question-title\"\n                                    value = {title}\n                                    onChange = {(e) => setTitle(e.target.value)}\n                                />\n                            </FormControl>\n                        </ModalBody>\n                        <ModalFooter>\n                            <HStack spacing = {4}>\n                                <Button onClick = {onClose}>Zatvori</Button>\n                                <Button\n                                    onClick = {handleSubmit}\n                                    colorScheme = \"blue\"\n                                    disabled = {!title.trim()}\n                                    isLoading = {isSaving}\n                                >\n                                    Postavi\n                                </Button>\n                            </HStack>\n                        </ModalFooter>\n                    </ModalContent>\n                </ModalOverlay>\n            </Modal>\n        </>\n    );\n};\n\nexport default PostNewQuestion;","/home/elmedin/pitaj.ba/src/components/vote-buttons.js",["39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":21,"nodeType":"46","messageId":"47","endLine":1,"endColumn":25},{"ruleId":"44","severity":1,"message":"48","line":1,"column":27,"nodeType":"46","messageId":"47","endLine":1,"endColumn":34},{"ruleId":"44","severity":1,"message":"49","line":16,"column":27,"nodeType":"46","messageId":"47","endLine":16,"endColumn":36},{"ruleId":"44","severity":1,"message":"50","line":22,"column":22,"nodeType":"46","messageId":"47","endLine":22,"endColumn":31},{"ruleId":"44","severity":1,"message":"51","line":1,"column":28,"nodeType":"46","messageId":"47","endLine":1,"endColumn":36},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'Flex' is defined but never used.","Identifier","unusedVar","'Spinner' is defined but never used.","'useEffect' is defined but never used.","'setSaving' is assigned a value but never used.","'Textarea' is defined but never used.","no-global-assign","no-unsafe-negation"]